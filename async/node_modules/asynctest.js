var async = require('async'), 
	fs = require('fs'),
	readline = require('readline'),
	lazy = require('lazy'),
	_dir = process.argv[2];

if (!_dir){
	throw new Error('No dir specified! run as "node asynctest.js DirToScan"');

}
// read a directory of files and find lines with a given pattern and stitch them together
// into a final file

var finalfile = fs.createWriteStream('./out.txt', 
	{
		'flags': 'a',
		'encoding': 'utf8',
		'mode': 0666
	}
);

async.waterfall([
    function readdir(callback){
        fs.readdir(_dir, function(err, files) {
        	callback(err, files);
        });
    },
    function loopFiles(files, callback){
    	files.forEach( function(fname) {
    		callback(null, fname);
    	});
    },
	function checkFile(fname, callback){
		console.log('Checking ' + _dir + fname);
		fs.stat(_dir + fname, function(err, stats) {
			callback(err, stats, fname);
		});
    },
	function checkFile(stats, fname, callback){
		if (stats.isFile()){
			new lazy(fs.createReadStream(_dir+fname, {'encoding':'utf8'}))
			    .lines
			    .forEach(
				function(line) 
				{ 
					var l = line.toString();
					if (l.search('fail'))
				    	finalfile.write(fname + ":" + l +'\n','utf8', function(err){
				    		if(err)
				    			callback(err,"Failed processing " + fname);
				    	}); 
				}
			    );
		}
    },

], function (err, result) {
   // result now equals 'done' 
   console.log('Finally : ' + result);   
});